syntax = "proto3";

package com.rfid.asset;

import "google/protobuf/timestamp.proto"; // v3.0.0
import "google/protobuf/empty.proto"; // v3.0.0

option go_package = "./asset";
option java_multiple_files = true;
option java_package = "com.rfid.asset.proto";

// Represents a physical asset being tracked
message Asset {
    string id = 1;
    string rfid_tag = 2;
    string name = 3;
    string description = 4;
    string image_url = 5;
    Location current_location = 6;
    AssetStatus status = 7;
    AssetMetadata metadata = 8;
    google.protobuf.Timestamp created_at = 9;
    google.protobuf.Timestamp updated_at = 10;
    string created_by = 11;
    string updated_by = 12;
    repeated AuditEntry audit_trail = 13;
}

// Represents a physical location where assets can be stored
message Location {
    string id = 1;
    string name = 2;
    string zone = 3;
    Coordinates coordinates = 4;
    string annotation = 5;
    bool active = 6;
    int32 max_capacity = 7;
    int32 current_capacity = 8;
    repeated string supported_asset_types = 9;
}

// Represents geographical coordinates for location tracking
message Coordinates {
    double latitude = 1;
    double longitude = 2;
    double elevation = 3;
}

// Represents metadata associated with an asset
message AssetMetadata {
    string manufacturer = 1;
    string model = 2;
    string serial_number = 3;
    string category = 4;
    map<string, string> custom_attributes = 5;
}

// Represents a single audit trail entry for asset changes
message AuditEntry {
    google.protobuf.Timestamp timestamp = 1;
    string user_id = 2;
    string action = 3;
    string details = 4;
    map<string, string> changed_fields = 5;
}

// Filter criteria for asset queries with pagination
message AssetFilter {
    repeated string tags = 1;
    string location_id = 2;
    AssetStatus status = 3;
    TimeRange time_range = 4;
    int32 page_size = 5;
    string page_token = 6;
    string sort_field = 7;
    SortOrder sort_order = 8;
}

// Time period for historical queries with optional fields
message TimeRange {
    optional google.protobuf.Timestamp start_time = 1;
    optional google.protobuf.Timestamp end_time = 2;
    optional Duration last_n_hours = 3;
    optional Duration last_n_days = 4;
}

// Duration specification for time ranges
message Duration {
    int64 value = 1;
}

// Response message for asset listing
message AssetList {
    repeated Asset assets = 1;
    string next_page_token = 2;
    int32 total_count = 3;
}

// Response message for location capacity
message LocationCapacity {
    string location_id = 1;
    int32 max_capacity = 2;
    int32 current_capacity = 3;
    float utilization_percentage = 4;
}

// Asset status enumeration
enum AssetStatus {
    ASSET_STATUS_UNSPECIFIED = 0;
    ASSET_STATUS_ACTIVE = 1;
    ASSET_STATUS_INACTIVE = 2;
    ASSET_STATUS_MAINTENANCE = 3;
    ASSET_STATUS_RETIRED = 4;
}

// Sort order enumeration
enum SortOrder {
    SORT_ORDER_UNSPECIFIED = 0;
    SORT_ORDER_ASCENDING = 1;
    SORT_ORDER_DESCENDING = 2;
}

// Service for managing assets and their locations
service AssetService {
    // Creates a new asset
    rpc CreateAsset(Asset) returns (Asset) {}
    
    // Updates an existing asset
    rpc UpdateAsset(Asset) returns (Asset) {}
    
    // Retrieves an asset by ID
    rpc GetAsset(GetAssetRequest) returns (Asset) {}
    
    // Lists assets based on filter criteria
    rpc ListAssets(AssetFilter) returns (AssetList) {}
    
    // Updates location information
    rpc UpdateLocation(Location) returns (Location) {}
    
    // Retrieves location information
    rpc GetLocation(GetLocationRequest) returns (Location) {}
    
    // Retrieves asset history
    rpc GetAssetHistory(GetAssetHistoryRequest) returns (GetAssetHistoryResponse) {}
    
    // Retrieves location capacity information
    rpc GetLocationCapacity(GetLocationCapacityRequest) returns (LocationCapacity) {}
}

// Request message for getting an asset
message GetAssetRequest {
    string id = 1;
}

// Request message for getting a location
message GetLocationRequest {
    string id = 1;
}

// Request message for getting asset history
message GetAssetHistoryRequest {
    string asset_id = 1;
    TimeRange time_range = 2;
}

// Response message for asset history
message GetAssetHistoryResponse {
    repeated AuditEntry entries = 1;
}

// Request message for getting location capacity
message GetLocationCapacityRequest {
    string location_id = 1;
}